services:
  nginx:
    container_name: nginx
    build: ./docker/nginx
    command: nginx -g "daemon off;"
    links:
      - php
    ports:
      - '80:80'
    volumes:
      - ./logs/nginx:/var/log/nginx
      - ./src/online-shop-server:/var/www/html/online-shop-server
    networks:
      - shop-admin-network
  php:
    container_name: php
    build: ./docker/php
    ports:
      - '9000:9000'
    user: '1000:1000'
    volumes:
      - ./src/online-shop-server:/var/www/html/online-shop-server
      - ./xdebug:/var/logs/xdebug
    working_dir: /var/www/html/online-shop-server
    networks:
      - shop-admin-network
  composer:
    container_name: composer
    image: composer/composer
    volumes:
      - ./src/online-shop-server:/var/www/html/online-shop-server
    working_dir: /var/www/html/online-shop-server
    command: install
    networks:
      - shop-admin-network
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: '<root-password>'
      MYSQL_DATABASE: online_shop
      MYSQL_USER: online-shop
      MYSQL_PASSWORD: '<db-password>'
    ports:
      - '3306:3306'
    volumes:
      - mysqldata:/var/lib/mysql
    networks:
      - shop-admin-network
  localstack:
    container_name: lstack
    hostname: localstack
    image: localstack/localstack:latest
    network_mode: bridge
    environment:
      - AWS_DEFAULT_REGION=eu-north-1
      - EDGE_PORT=4566
      - SERVICES=s3,ses,sqs
      - HOSTNAME_EXTERNAL=localstack
      - EAGER_SERVICE_LOADING=1
      - USE_SSL=false
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DATA_DIR=/tmp/localstack/data
      - API_KEY=2Pj9GfODOF
      - SMTP_USER='pivis36787@evilant.com'
      - SMTP_PASS='vEcTNqH54TZZCGz+-23=53$$'
    ports:
      - '127.0.0.1:4566:4566' # LocalStack Gateway
      - '127.0.0.1:4510-4559:4510-4559' # external services port range
      - '8055:8080'
    volumes:
      - 'localstackData:/tmp/localstack'
      - '/var/run/docker.sock:/var/run/docker.sock'
      - ./aws:/etc/localstack/init/ready.d
    networks:
      - shop-admin-network

volumes:
  mysqldata:
    name: dbvolume
  localstackData:
    name: localstackData

networks:
  shop-admin-network: {}
